//ESCAPISM GAME TODOS

1. make the state BGs
2. get the basic state machine to work (Start, game pause, win, lose)
3. make game sprites (steven, Enemies, bubbles, stars, bubbled sprites, lives)
4. get steven sprite to show up on screen
5. get user input to work on moving steven
6. get steven anisprites to work
7. get enemies, stars, and lives on screen
8. get enemy mechanics to work (movement, collision, bubbling and bubbling collision)
9. get star mechanics to work (collision and bubbling)
10. get lives mechanics to work
- get cheat mechanic to work
- get winning condition to work
- add star locations to state machine
- get basic sound stuff working
- create and implement collision map
- make extra Splashscreens (w/ textual info too...check notes for help)

EASY:
- update spritesheet (enemies, cheats,stars)
- finish implementing core sounds for the game (bubbling, pause, help, win, lose, star state, cutscenes)
- extra lives?
- add sounds for everything else


Todo Moday:
- finish and implement cutscene animated sprites
- add extra ives to game
- add colmap


- make state BGs for (start, help, win, lose, pause)
- update spritesheet
- finish implementing core sounds for the game (bubbling, pause, help, win, lose) 







MED:
- add animated sprites to spritesheet

- add extra screens to state machine
- create animated loops on screen


TODO for Sat:
- work on XL demo for horizontal format

-update Star and Enemies
	-start from init for each so they can show up on the screen
	-then fix update fxns
	-add extra star collisions to state machine


- work on animated sprite lab for steven scenes
- implement scenes into state machine


     if (steven.direction && hOff < 256 ) {
        // change where BG0 now looks for maps!
        screenBlock--;
        hOff += 256;
        REG_BG0CNT = BG_CHARBLOCK(0) | BG_SCREENBLOCK(screenBlock) | BG_SIZE_WIDE | BG_8BPP;
    }


    line 48:




    //yellow diamond adlib
    if (steven.worldCol == 60) {
        playSoundB(ydSound, YDSOUNDLEN, 0);
    }

    //blue diamond adlib
    if (steven.worldCol == 190) {
        playSoundB(bdSound, BDSOUNDLEN, 0);
    }

    //white diamond adlib
    // if (steven.worldCol == 310) {
    //  //playSoundB(ydSound, YDSOUNDLEN, 0);
    // }


    // //spinel adlib
    // if (steven.worldCol == 440) {
    //  //playSoundB(ydSound, YDSOUNDLEN, 0);
    // }

    // //jasper adlib
    // if (collision(steven.worldRow, steven.worldCol, steven.height, steven.width,
    //       bonuses[0]->worldRow, bonuses[0]->worldCol, bonuses[0]->height, bonuses[0]->width)) {

    // }

    // //aqua adlib 
    // if (collision(steven.worldRow, steven.worldCol, steven.height, steven.width,
    //       37, 607, bonuses[0]->height, bonuses[0]->width)) {

    // }

    // //eyeball adlib
    // if (collision(steven.worldRow, steven.worldCol, steven.height, steven.width,
    //       70, 780, bonuses[0]->height, bonuses[0]->width)) {

    // }


